# SPRING
spring.application.name=library-service
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
server.port=${SERVER_PORT:8088}

# TIME
app.time-zone=${APP_TIMEZONE:Asia/Jakarta}

### JPA ###
spring.datasource.url=jdbc:postgresql://${DATABASE_URL:127.0.0.1}:${DATABASE_PORT:5432}/${DATABASE_NAME:postgres}
spring.datasource.username=${DATABASE_USERNAME:mastama}
spring.datasource.password=${DATABASE_PASSWORD:post456}
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.temp.use_jdbc_metadata_defaults=false

### POSTGRES ###
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.minimum-idle=${HIKARI_MINIMUM_IDLE:2}
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAXIMUM_POOL:5}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:15000}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:900000}
spring.datasource.hikari.pool-name=${HIKARI_POOL_NAME:approval-model-pool}
spring.datasource.hikari.auto-commit=${HIKARI_AUTO_COMMIT:true}

# SECURITY
spring.security.user.name=admin
spring.security.user.password={noop}admin

# REDIS
spring.data.redis.host=${REDIS_HOST:127.0.0.1}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.timeout=${REDIS_POOL_TIMEOUT:100}
spring.data.redis.jedis.pool.max-active=${REDIS_POOL_MAXACTIVE:256}
spring.data.redis.jedis.pool.max-idle=${REDIS_POOL_MAXIDLE:12}
spring.data.redis.jedis.pool.max-wait=${REDIS_POOL_MAXWAIT:100}
spring.data.redis.jedis.pool.min-idle=${REDIS_POOL_MINIDLE:6}
spring.data.redis.repositories.enabled=${REDIS_REPOSITORIES:true}
# Redis prefix
app.auth.redis-whitelist-prefix=auth:whitelist:
app.auth.redis-refresh-prefix=auth:refresh:
app.auth.redis-otp-prefix=auth:otp:
app.auth.redis-attempts-prefix=auth:attempts:
app.auth.redis-block-prefix=auth:block:
# Spring Cache with Redis
spring.cache.type=redis


# JWT (secret panjang >= 32 chars)
jwt.issuer=library-service
jwt.secret=change-me-change-me-change-me-1234567890
jwt.access-expiration-minutes=60
# Refresh Token
jwt.refresh-expiration-days=14

# ==== MFA / OTP ====
#mfa.enabled=true
mfa.otp.length=6
mfa.otp.ttl=5m
mfa.otp.cooldown=30s

# ==== Login Lockout ====
login.max-failed=5
login.window=10m
login.lock-duration=30m

# ==== Mailpit (SMTP dev) ====
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false
spring.mail.from=noreply@itsec.local
# opsional: supaya Actuator tidak marah saat Mailpit belum on
management.health.mail.enabled=false

# naikin visibilitas log untuk security
logging.level.com.yolifay.libraryservice.infrastructure.security=DEBUG
logging.level.com.yolifay.libraryservice.infrastructure.mfa=INFO
logging.level.com.yolifay.libraryservice.domain.usecase.auth=INFO
logging.level.com.yolifay.libraryservice.infrastructure.ratelimit=DEBUG

# enable swagger (kadang default sudah true)
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
# path UI (akses via /swagger-ui.html atau /swagger-ui/index.html)
springdoc.swagger-ui.path=/swagger-ui.html
logging.level.org.springdoc=INFO

# ===== RateLimit =====
ratelimit.enabled=true

# LOGIN (password / otp) 10x / 5m per IP
ratelimit.rules.login.limit=10
ratelimit.rules.login.window=5m
ratelimit.rules.login.key-by=IP_USER
ratelimit.rules.login.paths[0]=/api/v1/auth/login
ratelimit.rules.login.paths[1]=/api/v1/auth/login-otp

# REQUEST OTP 3x / 5m per IP+USER
ratelimit.rules.request-otp.limit=3
ratelimit.rules.request-otp.window=5m
ratelimit.rules.request-otp.key-by=IP_USER
ratelimit.rules.request-otp.paths[0]=/api/v1/auth/request-otp

# REFRESH TOKEN 20x / 1h per USER
ratelimit.rules.refresh.limit=20
ratelimit.rules.refresh.window=1h
ratelimit.rules.refresh.key-by=USER
ratelimit.rules.refresh.paths[0]=/api/v1/auth/refresh

# CREATE ARTICLE 30x / 1m per USER, hanya POST /articles
ratelimit.rules.articles-create.limit=30
ratelimit.rules.articles-create.window=1m
ratelimit.rules.articles-create.key-by=USER
ratelimit.rules.articles-create.paths[0]=/api/v1/articles
ratelimit.rules.articles-create.method=POST