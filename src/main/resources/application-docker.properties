# ===== App =====
spring.application.name=library-service
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
server.port=${SERVER_PORT:8088}

# Time zone utk Clock/serializer (sesuai milikmu)
app.time-zone=${APP_TIMEZONE:Asia/Jakarta}

# ===== JPA / DataSource (pakai host 'postgres' di dalam compose) =====
spring.datasource.url=jdbc:postgresql://${DATABASE_URL:postgres}:${DATABASE_PORT:5432}/${DATABASE_NAME:library}
spring.datasource.username=${DATABASE_USERNAME:library}
spring.datasource.password=${DATABASE_PASSWORD:library}
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.temp.use_jdbc_metadata_defaults=false

# Hikari
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.minimum-idle=${HIKARI_MINIMUM_IDLE:2}
spring.datasource.hikari.maximum-pool-size=${HIKARI_MAXIMUM_POOL:5}
spring.datasource.hikari.connection-timeout=${HIKARI_CONNECTION_TIMEOUT:15000}
spring.datasource.hikari.idle-timeout=${HIKARI_IDLE_TIMEOUT:300000}
spring.datasource.hikari.max-lifetime=${HIKARI_MAX_LIFETIME:900000}
spring.datasource.hikari.pool-name=${HIKARI_POOL_NAME:approval-model-pool}
spring.datasource.hikari.auto-commit=${HIKARI_AUTO_COMMIT:true}

# ===== Redis (pakai host 'redis' di dalam compose) =====
spring.data.redis.host=${REDIS_HOST:redis}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.timeout=${REDIS_POOL_TIMEOUT:100}
spring.data.redis.jedis.pool.max-active=${REDIS_POOL_MAXACTIVE:256}
spring.data.redis.jedis.pool.max-idle=${REDIS_POOL_MAXIDLE:12}
spring.data.redis.jedis.pool.max-wait=${REDIS_POOL_MAXWAIT:100}
spring.data.redis.jedis.pool.min-idle=${REDIS_POOL_MINIDLE:6}
spring.data.redis.repositories.enabled=${REDIS_REPOSITORIES:true}

# Redis key prefixes
app.auth.redis-whitelist-prefix=auth:whitelist:
app.auth.redis-refresh-prefix=auth:refresh:
app.auth.redis-otp-prefix=auth:otp:
app.auth.redis-attempts-prefix=auth:attempts:
app.auth.redis-block-prefix=auth:block:

# ===== JWT =====
jwt.issuer=library-service
jwt.secret=${JWT_SECRET:change-me-change-me-change-me-1234567890}

# Jika kodenya SUDAH pakai Duration (saran sebelumnya):
jwt.access-expiration=60m
jwt.refresh-expiration=14d

# Jika kodenya MASIH pakai angka minutes/days, pakai ini dan hapus 2 baris di atas:
# jwt.access-expiration-minutes=60
# jwt.refresh-expiration-days=14

# ===== MFA / OTP =====
mfa.enabled=${MFA_ENABLED:true}
mfa.otp.length=${MFA_OTP_LENGTH:6}
mfa.otp.ttl=${MFA_OTP_TTL:5m}
mfa.otp.cooldown=${MFA_OTP_COOLDOWN:30s}

# ===== Mailpit (pakai host 'mailpit' di dalam compose) =====
spring.mail.host=${MAIL_HOST:mailpit}
spring.mail.port=${MAIL_PORT:1025}
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false
spring.mail.from=${MAIL_FROM:noreply@itsec.local}
management.health.mail.enabled=false

# ===== Swagger =====
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.version=OPENAPI_3_0
logging.level.org.springdoc=INFO

# ===== Logging =====
logging.level.com.yolifay.libraryservice.infrastructure.security=DEBUG
logging.level.com.yolifay.libraryservice.infrastructure.mfa=INFO
logging.level.com.yolifay.libraryservice.domain.usecase.auth=INFO
